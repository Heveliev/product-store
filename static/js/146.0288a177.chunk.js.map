{"version":3,"file":"static/js/146.0288a177.chunk.js","mappings":"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","sources":["components/InputFilter/InputFilter.jsx","redux/filter/filter-select.js","redux/products/products-selectors.js","redux/modal/modal-select.js","components/ModalWindow/ModalWindow.jsx","components/ProductsList/ProductsList.jsx","components/AddNewProduct/AddNewProduct.styled.jsx","components/AddNewProduct/AddNewProduct.jsx","pages/Products/Products.jsx"],"sourcesContent":["import { Input,Box,Text } from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"redux/filter/filter-slice\";\n\nexport const InputFilter = () => {\n    const dispatch = useDispatch();\n\n    const filterProducts = evt => {\n    const evtTarget = evt.currentTarget.value.toLowerCase();\n    dispatch(filter(evtTarget)) \n  }\n    return (<Box p={4}>\n        <Text fontSize=\"xl\" mt={2}>Enter the name or category of the product you are looking for:</Text>\n      <Input\n                onChange={filterProducts}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Search products\"\n        mb={4}\n      />     \n          </Box>\n        )\n}","export const getFilter = state => state.filter;","export const getProducts = state => state.products.items;\nexport const getIsLoading = state => state.products.isLoading;","export const getIsOpen = state => state.modal","import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    FormControl,\n    FormLabel,\n    Input,\n\n} from \"@chakra-ui/react\";\n import { Notify } from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProduct } from \"redux/products/products-thunk\";\nimport { getIsOpen } from \"redux/modal/modal-select\";\nimport { isOpen } from \"redux/modal/modal-slice\";\n\nexport function ModalWindow({id,values}) {\n    const open = useSelector(getIsOpen)\n  const dispatch = useDispatch();\n  const { title } = values;\n\n\n  \n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n         const form = evt.currentTarget\n    const title = form.elements.title.value;\n   if (!title) {\n     Notify.failure('Sorry, but you didn&#180;t enter a value in the field')\n     return\n      }\n\n  \n    dispatch(editProduct({ title:title, id }))\n      dispatch(isOpen())\n      \n    }\n  return (\n      <Modal isOpen={open} onClose={()=>dispatch(isOpen())}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Please make changes</ModalHeader>\n              <ModalBody>\n                  <form onSubmit={handleSubmit}>\n           <FormControl>\n            <FormLabel>Title</FormLabel>\n                      <Input\n                              placeholder=\"Title\"\n                              type=\"text\"\n                              name=\"title\"\n                              defaultValue={title}\n                      />\n          </FormControl>\n                      <div style={{ display: 'flex', justifyContent: 'end', gap: '10px', margin: '10px' }} >\n                          <Button type=\"submit\" colorScheme=\"blue\" >Save</Button>\n\n                      <Button variant=\"outline\" mr={3} onClick={()=>dispatch(isOpen())}>\n            Cancel\n          </Button></div>\n\n</form>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { Box, Flex, Image, Spacer, Stack, Text, IconButton, Portal } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/filter/filter-select\";\nimport { getProducts } from \"redux/products/products-selectors\";\nimport { CloseIcon,EditIcon } from \"@chakra-ui/icons\";\nimport { deleteProduct } from \"redux/products/products-thunk\";\nimport { getIsOpen } from \"redux/modal/modal-select\";\nimport { useState } from \"react\";\nimport { isOpen } from 'redux/modal/modal-slice';\nimport { ModalWindow } from \"components/ModalWindow/ModalWindow\";\n\nexport const ProductsList = () => {\n   const [id, setId] = useState();\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts)\n  const filter = useSelector(getFilter);\n    const isOpenModal = useSelector(getIsOpen);\n  \n    const filterProducts = () => {\n      return products?.filter(product =>\n        product.title.toLowerCase().includes(filter) ||\n      product.category.toLowerCase().includes(filter))\n  }\n    \n  \n const findProduct = id => {\n  return products?.find(item => item.id === id);\n};\n\n    return ( <>\n    <Stack padding=\"10px\" spacing={4}>\n      {filterProducts().map(product => (\n        <Flex key={product.id} align=\"center\" position=\"relative\">\n          {product.images[0] &&\n            <Image border=\"green 3px solid\" boxSize=\"100px\" objectFit=\"cover\" src={product.images[0]} alt={product.title} />}\n          <Box ml={4}>\n            <Text fontWeight=\"bold\">{product.title}</Text>\n            {product.description && <Text>{product.description}</Text>}\n            {product.price && <Text fontSize=\"xl\" fontWeight=\"bold\" mt={2}>${product.price}</Text>}\n            {product.rating && <Text>Rating: {product.rating}</Text>}\n            {product.stock && <Text>Stock: {product.stock}</Text>}\n            {product.category && <Text>Category: {product.category}</Text>}\n          </Box>\n          <Spacer />\n          <Box><IconButton\n            width=\"100px\"\n                      position='absolute'\n                      top=\"50%\"\n                      right=\"0\"\n              icon={<CloseIcon />}\n              aria-label=\"Delete Product\"\n              variant=\"ghost\"\n              onClick={() =>dispatch(deleteProduct(product.id))}\n          />\n          <IconButton\n          data-id={product.id}\n              width=\"100px\"\n            position='absolute'\n            bottom=\"0\"\n                      right=\"0\"\n              icon={<EditIcon/>}\n              aria-label=\"Edit Product\"\n              variant=\"ghost\"\n              onClick={() => {  dispatch(isOpen()); setId(product.id) }}\n          /></Box>\n           \n        </Flex>\n      ))}\n      </Stack>\n      <Portal>{isOpenModal && <ModalWindow id={id} values={findProduct(id)} />}</Portal>\n    </>\n  );\n}\n","import styled from '@emotion/styled'\nimport {Field} from 'formik';\n\nexport const InputField = styled(Field)`\n width: 100%;\n  height: 8;\n  font-size: 16px;\n  padding: 0;\n  background-color: #EDF2F7; \n  border: 1px solid #E2E8F0; \n  border-radius: 0;\n  outline: none;\n  box-sizing: border-box;\n   padding: 2 3;\n  border-color: #CBD5E0;\n  color:black;\n  border-radius:4px;\n`;\n\nexport const ErrorText = styled.p`\ncolor:red;`;","import { Formik,Form,ErrorMessage } from 'formik';\nimport {\n  FormControl,\n  FormLabel,\n  Button,\n  Stack,\n  Flex,\n  Heading,\n} from '@chakra-ui/react';\nimport { InputField,ErrorText  } from './AddNewProduct.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from 'redux/products/products-thunk';\n\nconst schema = yup.object().shape({\n    title: yup.string().required(),\n    author: yup.string().required(),\n    year: yup.number().required(),\n    rating:yup.number().required(),\n}) \n\nconst initialValues = {\n    title: '',\n    author: '',\n    year: 1995,\n    rating:0,\n}\n\nconst FormError = ({ name }) => {\n    return(\n      <ErrorMessage\n      name={ name }\n      render={ message => <ErrorText>{ message}</ErrorText>}/>\n  )\n}\n\nexport const AddNewProduct = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, author, year, rating } = values;\n    dispatch(addProduct({title, author, year, rating}))    \nresetForm()\n    }\n    \n    return(\n      <>\n        <Heading fontSize=\"30px\">Please, enter values in the fields to add a new product:</Heading>\n            <Formik initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={schema}>\n    <Form>\n  <Stack padding=\"15px\" spacing=\"4\">\n    <Flex justifyContent=\"space-between\">\n      <FormControl flex=\"1\">\n        <FormLabel>Title\n                            <InputField name=\"title\" type=\"text\" />\n        <FormError name=\"title\" />\n        </FormLabel>\n\n      </FormControl>\n      <FormControl flex=\"1\" marginLeft=\"10px\">\n          <FormLabel>Author\n          <InputField name=\"author\" type=\"text\" />\n        <FormError name=\"author\" /></FormLabel>\n        \n      </FormControl>\n    </Flex>\n    <Flex justifyContent=\"space-between\">\n      <FormControl flex=\"1\">\n        <FormLabel>Year\n        <InputField name=\"year\" type=\"number\" />\n        <FormError name=\"year\" />\n        </FormLabel>\n        \n      </FormControl>\n      <FormControl flex=\"1\" marginLeft=\"10px\">\n        <FormLabel>Rating\n          <InputField name=\"rating\" />\n        <FormError name=\"rating\" />\n        </FormLabel>\n        \n      </FormControl>\n    </Flex>\n    <Button type=\"submit\">Add Product</Button>\n  </Stack>\n</Form>\n                </Formik>\n        </>\n    )\n}\n","import { InputFilter } from \"components/InputFilter/InputFilter\";\nimport { useSelector } from \"react-redux\";\nimport { Spinner,Box, Heading } from \"@chakra-ui/react\";\nimport { ProductsList } from \"components/ProductsList/ProductsList\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getIsLoading, getProducts } from \"redux/products/products-selectors\";\nimport { fetchAllProducts } from \"redux/products/products-thunk\";\nimport { AddNewProduct } from \"components/AddNewProduct/AddNewProduct\";\n\nconst Products = () => {\n    const dispatch = useDispatch();\n    const products = useSelector(getProducts)\n      const loading = useSelector(getIsLoading);\n\n     useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n    \n    return(\n        <>\n            <AddNewProduct/>\n            {loading ?\n                <Box position=\"fixed\"\n                    left=\"50%\"\n                    top=\"50%\"\n                    transform=\"translate(-50%,-50%)\">\n                    <Spinner thickness='4px'\n                        speed='0.65s'\n                        emptyColor='gray.200'\n                        color='blue.500'\n                        size='xl'\n                    />\n                </Box>\n                : <><Heading textAlign=\"center\">Products list:</Heading>\n                    <InputFilter />\n                    {products?.length ? <ProductsList /> : <Heading margin=\"20px\">Sorry, but we have sold all the products</Heading>}\n                    </>}\n            \n        </>\n    )\n}\nexport default Products"],"names":["InputFilter","dispatch","useDispatch","p","fontSize","mt","I","onChange","evt","evtTarget","currentTarget","value","toLowerCase","filter","type","name","placeholder","mb","getFilter","state","getProducts","products","items","getIsLoading","isLoading","getIsOpen","modal","ModalWindow","id","values","open","useSelector","title","isOpen","onClose","onSubmit","preventDefault","elements","editProduct","Notify","defaultValue","style","display","justifyContent","gap","margin","colorScheme","variant","mr","onClick","ProductsList","useState","setId","isOpenModal","padding","spacing","product","includes","category","map","align","position","images","border","boxSize","objectFit","src","alt","ml","fontWeight","description","price","rating","stock","width","top","right","icon","deleteProduct","bottom","find","item","findProduct","InputField","styled","Field","ErrorText","schema","yup","shape","required","author","year","initialValues","FormError","render","message","AddNewProduct","resetForm","addProduct","validationSchema","flex","marginLeft","loading","useEffect","fetchAllProducts","left","transform","thickness","speed","emptyColor","color","size","textAlign","length"],"sourceRoot":""}