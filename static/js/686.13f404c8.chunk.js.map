{"version":3,"file":"static/js/686.13f404c8.chunk.js","mappings":"mRAAaA,EAAU,SAAAC,GAAK,OAAIA,EAAMC,IAAV,E,mBCOfC,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYP,GAGzBQ,EAAa,SAACC,GACtBL,GAASF,EAAAA,EAAAA,GAAKO,GACX,EAED,OACE,+BACE,UAAC,IAAD,CAAaC,OAAO,IAAIC,QAAQ,OAAOC,SAAS,OAAOC,QAAQ,UAAUC,OAAO,OAAhF,WACE,SAAC,IAAD,CACEJ,OAAO,YACPK,UAAU,SAAC,IAAD,CAAMC,GAAiB,aAAbV,EAA0BW,EAAAA,GAAiBC,EAAAA,KAC/DC,QAAS,kBAAMX,EAAwB,aAAbF,EAA0B,YAAc,WAAzD,EAHX,4BAOA,SAAC,IAAD,CACES,UAAU,SAAC,IAAD,CAAMC,GAAiB,cAAbV,EAA2BW,EAAAA,GAAiBC,EAAAA,KAChEC,QAAS,kBAAMX,EAAwB,cAAbF,EAA2B,aAAe,YAA3D,EAFX,6BAMA,SAAC,IAAD,CACES,UAAU,SAAC,IAAD,CAAMC,GAAiB,aAAbV,EAA0BW,EAAAA,GAAiBC,EAAAA,KAC/DC,QAAS,kBAAMX,EAAwB,aAAbF,EAA0B,YAAc,WAAzD,EAFX,+BAUP,ECrCYc,EAAc,WACvB,IAAMhB,GAAWC,EAAAA,EAAAA,MAMjB,OAAQ,UAAC,KAAD,CAAKgB,EAAG,EAAR,WACJ,SAAC,IAAD,CAAMC,SAAS,KAAKC,GAAI,EAAxB,6EACF,SAAC,EAAAC,EAAD,CACUC,SAPW,SAAAC,GACvB,IAAMC,EAAYD,EAAIE,cAAcC,MAAMC,cAC1C1B,GAAS2B,EAAAA,EAAAA,GAAOJ,GACjB,EAKKlB,KAAK,OACLuB,KAAK,OACLC,YAAY,kBACZC,GAAI,IAPA,SAQC,SAAC/B,EAAD,MAGZ,E,mGCvBYgC,EAAY,SAAAlC,GAAK,OAAIA,EAAM8B,MAAV,ECAjBK,EAAc,SAAAnC,GAAK,OAAIA,EAAMoC,SAASC,KAAnB,EACnBC,EAAe,SAAAtC,GAAK,OAAIA,EAAMoC,SAASG,SAAnB,E,6BCDpBC,EAAY,SAAAxC,GAAK,OAAIA,EAAMyC,KAAV,E,8GCmBvB,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,GAAGC,EAAS,EAATA,OACtBC,GAAOvC,EAAAA,EAAAA,IAAYkC,GACrBrC,GAAWC,EAAAA,EAAAA,MACT0C,EAAUF,EAAVE,MAmBR,OACI,UAAC,KAAD,CAAOC,OAAQF,EAAMG,QAAS,kBAAI7C,GAAS4C,EAAAA,EAAAA,KAAb,EAA9B,WACA,SAAC,IAAD,KACA,UAAC,IAAD,YACE,SAAC,IAAD,mCACM,SAAC,IAAD,WACI,kBAAME,SApBC,SAAAxB,GACjBA,EAAIyB,iBACH,IACCJ,EADYrB,EAAIE,cACHwB,SAASL,MAAMlB,MAC9BkB,GAMJ3C,GAASiD,EAAAA,EAAAA,IAAY,CAAEN,MAAMA,EAAOH,GAAAA,KAClCxC,GAAS4C,EAAAA,EAAAA,OANVM,EAAAA,OAAAA,QAAe,wDAQf,EAOa,WACP,UAAC,KAAD,YACC,SAAC,IAAD,qBACU,SAAC,EAAA9B,EAAD,CACQS,YAAY,QACZxB,KAAK,OACLuB,KAAK,QACLuB,aAAcR,QAGtB,iBAAKS,MAAO,CAAE7C,QAAS,OAAQ8C,eAAgB,MAAOC,IAAK,OAAQhD,OAAQ,QAA3E,WACI,SAAC,IAAD,CAAQD,KAAK,SAASkD,YAAY,OAAlC,mBAEJ,SAAC,IAAD,CAAQ9C,QAAQ,UAAU+C,GAAI,EAAGzC,QAAS,kBAAIf,GAAS4C,EAAAA,EAAAA,KAAb,EAA1C,6BAMd,SAAC,IAAD,SAKP,CC1DM,I,IAAMa,EAAe,WACzB,OAAoBC,EAAAA,EAAAA,YAApB,eAAOlB,EAAP,KAAWmB,EAAX,KACK3D,GAAWC,EAAAA,EAAAA,MACXgC,GAAW9B,EAAAA,EAAAA,IAAY6B,GACvBL,GAASxB,EAAAA,EAAAA,IAAY4B,GACrB6B,GAAczD,EAAAA,EAAAA,IAAYkC,GAC1BnC,GAAWC,EAAAA,EAAAA,IAAYP,GAsBvBiE,EAlBe,SAAC5B,EAAU/B,GAC9B,OAAQA,GACN,IAAK,WACH,OAAO,OAAI+B,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,KAAtB,IAC5B,IAAK,YACH,OAAO,OAAI/B,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,KAAtB,IAC5B,IAAK,YACH,OAAO,OAAI/B,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,MAAvB,IAC5B,IAAK,aACH,OAAO,OAAIhC,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,MAAvB,IAC5B,IAAK,WACH,OAAO,OAAIhC,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUD,EAAEI,MAAQH,EAAEG,KAAtB,IAC5B,IAAK,YACH,OAAO,OAAIjC,GAAUnC,MAAK,SAACgE,EAAGC,GAAJ,OAAUA,EAAEG,MAAQJ,EAAEI,KAAtB,IAC5B,QACE,OAAOjC,EAEZ,CACsBkC,CAAalC,EAAU/B,GAiB5C,OAAS,iCACT,SAAC,IAAD,CAAOkE,QAAQ,OAAOC,QAAS,EAA/B,UAfE,OAAOR,QAAP,IAAOA,OAAP,EAAOA,EAAgBlC,QAAO,SAAA2C,GAAO,aACnCA,EAAQ3B,MAAMjB,cAAc6C,SAAS5C,KAArC,UACF2C,EAAQE,gBADN,aACF,EAAkB9C,cAAc6C,SAAS5C,GAFJ,KAgBnB8C,KAAI,SAAAH,GAAO,OAC3B,UAAC,IAAD,CAAuBI,MAAM,SAASC,SAAS,WAA/C,UACGL,EAAQM,SACP,SAAC,IAAD,CAAOC,OAAO,kBAAkBC,QAAQ,QAAQC,UAAU,QAAQC,IAAKV,EAAQM,OAAO,GAAIK,IAAKX,EAAQ3B,SACzG,UAAC,KAAD,CAAKuC,GAAI,EAAT,WACE,SAAC,IAAD,CAAMC,WAAW,OAAjB,SAAyBb,EAAQ3B,QAChC2B,EAAQc,cAAe,SAAC,IAAD,UAAOd,EAAQc,cACtCd,EAAQN,QAAS,UAAC,IAAD,CAAM9C,SAAS,KAAKiE,WAAW,OAAOhE,GAAI,EAA1C,cAA+CmD,EAAQN,SACxEM,EAAQL,SAAU,UAAC,IAAD,sBAAeK,EAAQL,UACzCK,EAAQJ,QAAS,UAAC,IAAD,qBAAcI,EAAQJ,SACvCI,EAAQE,WAAY,UAAC,IAAD,wBAAiBF,EAAQE,YAC7CF,EAAQe,UAAUC,SAAU,UAAC,IAAD,CAAMC,OAAO,OAAb,qBAA6BjB,EAAQe,UAAUC,UAC3EhB,EAAQe,UAAUG,OAAQ,UAAC,IAAD,CAAMD,OAAO,OAAb,mBAA2BjB,EAAQe,UAAUG,YAE1E,SAAC,IAAD,KACA,UAAC,KAAD,YAAK,SAAC,IAAD,CACHC,MAAM,QACId,SAAS,WACTe,IAAI,MACJC,MAAM,IACdC,MAAM,SAAC,IAAD,IACN,aAAW,iBACXnF,QAAQ,QACRM,QAAS,kBAAKf,GAAS6F,EAAAA,EAAAA,IAAcvB,EAAQ9B,IAApC,KAEb,SAAC,IAAD,CACA,UAAS8B,EAAQ9B,GACbiD,MAAM,QACRd,SAAS,WACTmB,OAAO,IACGH,MAAM,IACdC,MAAM,SAAC,IAAD,IACN,aAAW,eACXnF,QAAQ,QACRM,QAAS,WAASf,GAAS4C,EAAAA,EAAAA,MAAWe,EAAMW,EAAQ9B,GAAK,SAjCpD8B,EAAQ9B,GADQ,OAwC7B,SAAC,IAAD,UAASoB,IAAe,SAACrB,EAAD,CAAaC,GAAIA,EAAIC,OA/C9B,SAAAD,GACnB,cAAOP,QAAP,IAAOA,OAAP,EAAOA,EAAU8D,MAAK,SAAAC,GAAI,OAAIA,EAAKxD,KAAOA,CAAhB,GAC3B,CA6C0DyD,CAAYzD,SAGtE,E,4BCpGY0D,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0SAgBVE,EAAYF,EAAAA,EAAAA,EAAH,kC,WCLhBG,GAASC,GAAAA,KAAaC,MAAM,CAC9B7D,MAAO4D,GAAAA,KAAaE,WACpBnB,OAAQiB,GAAAA,KAAaE,WACrBjB,KAAMe,GAAAA,KAAaE,WACnBxC,OAAOsC,GAAAA,KAAaE,aAGlBC,GAAgB,CAClB/D,MAAO,GACP2C,OAAQ,GACRE,KAAM,KACNvB,OAAO,GAGL0C,GAAY,SAAC,GAAc,IAAZ/E,EAAW,EAAXA,KACjB,OACE,SAAC,KAAD,CACAA,KAAOA,EACPgF,OAAS,SAAAC,GAAO,OAAI,SAACR,EAAD,UAAaQ,GAAjB,GAErB,EAEYC,GAAgB,WAC3B,IAAM9G,GAAWC,EAAAA,EAAAA,MAQf,OACE,iCACE,SAAC,IAAD,CAASiB,SAAS,OAAlB,uEACI,SAAC,KAAD,CAAQwF,cAAeA,GACnB5D,SAVO,SAACL,EAAD,GAA4B,IAAjBsE,EAAgB,EAAhBA,UACtBpE,EAAgCF,EAAhCE,MAAO2C,EAAyB7C,EAAzB6C,OAAQE,EAAiB/C,EAAjB+C,KAAMvB,EAAWxB,EAAXwB,OAC7BjE,GAASgH,EAAAA,EAAAA,IAAW,CAACrE,MAAAA,EAAO2C,OAAAA,EAAQE,KAAAA,EAAMvB,OAAAA,KAC9C8C,GACK,EAOWE,iBAAkBX,GAFtB,UAGR,SAAC,KAAD,WACF,UAAC,IAAD,CAAOlC,QAAQ,OAAOC,QAAQ,IAA9B,WACE,UAAC,IAAD,CAAMhB,eAAe,gBAArB,WACE,SAAC,KAAD,CAAa6D,KAAK,IAAlB,UACE,UAAC,IAAD,oBACoB,SAAChB,EAAD,CAAYtE,KAAK,QAAQvB,KAAK,UAClD,SAACsG,GAAD,CAAW/E,KAAK,gBAIlB,SAAC,KAAD,CAAasF,KAAK,IAAIC,WAAW,OAAjC,UACI,UAAC,IAAD,qBACA,SAACjB,EAAD,CAAYtE,KAAK,SAASvB,KAAK,UACjC,SAACsG,GAAD,CAAW/E,KAAK,oBAIpB,UAAC,IAAD,CAAMyB,eAAe,gBAArB,WACE,SAAC,KAAD,CAAa6D,KAAK,IAAlB,UACE,UAAC,IAAD,mBACA,SAAChB,EAAD,CAAYtE,KAAK,OAAOvB,KAAK,YAC7B,SAACsG,GAAD,CAAW/E,KAAK,eAIlB,SAAC,KAAD,CAAasF,KAAK,IAAIC,WAAW,OAAjC,UACE,UAAC,IAAD,qBACE,SAACjB,EAAD,CAAYtE,KAAK,YACnB,SAAC+E,GAAD,CAAW/E,KAAK,oBAKpB,SAAC,IAAD,CAAQvB,KAAK,SAAb,kCAMH,EC/CD,GAjCiB,WACb,IAAML,GAAWC,EAAAA,EAAAA,MACXgC,GAAW9B,EAAAA,EAAAA,IAAY6B,GACrBoF,GAAUjH,EAAAA,EAAAA,IAAYgC,GAM9B,OAJCkF,EAAAA,EAAAA,YAAU,WACPrH,GAASsH,EAAAA,EAAAA,MACZ,GAAE,CAACtH,KAGA,8BAEKoH,GACG,SAAC,KAAD,CAAKzC,SAAS,QACV4C,KAAK,MACL7B,IAAI,MACJ8B,UAAU,uBAHd,UAII,SAAC,IAAD,CAASC,UAAU,MACfC,MAAM,QACNC,WAAW,WACXC,MAAM,WACNC,KAAK,UAGX,iCAAE,SAACf,GAAD,KACA,SAAC,IAAD,CAASgB,UAAU,SAAnB,6BACA,SAAC9G,EAAD,IACS,OAARiB,QAAQ,IAARA,GAAAA,EAAU8F,QAAS,SAACtE,EAAD,KAAmB,SAAC,IAAD,CAASnD,OAAO,OAAhB,0DAK1D,C","sources":["redux/sort/sort-selector.js","components/ButtonsSort/ButtonsSort.jsx","components/InputFilter/InputFilter.jsx","redux/filter/filter-select.js","redux/products/products-selectors.js","redux/modal/modal-select.js","components/ModalWindow/ModalWindow.jsx","components/ProductsList/ProductsList.jsx","components/AddNewProduct/AddNewProduct.styled.jsx","components/AddNewProduct/AddNewProduct.jsx","pages/Products/Products.jsx"],"sourcesContent":["export const getSort = state => state.sort;","\nimport { Button, ButtonGroup, Icon } from '@chakra-ui/react';\nimport { FaSortAmountUp, FaSortAmountDown } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSort } from 'redux/sort/sort-selector';\nimport { sort } from 'redux/sort/sort-slice';\n\nexport const ButtonsSort = () => {\n    const dispatch = useDispatch();\n    const sortType = useSelector(getSort);\n\n \n  const handleSort = (type) => {\ndispatch(sort(type))\n  };\n\n  return (\n    <>\n      <ButtonGroup margin=\"0\" display=\"flex\" flexWrap=\"wrap\" variant=\"outline\" rowGap=\"10px\" >\n        <Button\n          margin=\"0 0 0 8px\"\n          leftIcon={<Icon as={sortType === \"priceAsc\" ? FaSortAmountUp : FaSortAmountDown} />}\n          onClick={() => handleSort(sortType === \"priceAsc\" ? \"priceDesc\" : \"priceAsc\")}\n        >\n          Sort by Price\n        </Button>\n        <Button\n          leftIcon={<Icon as={sortType === \"ratingAsc\" ? FaSortAmountUp : FaSortAmountDown} />}\n          onClick={() => handleSort(sortType === \"ratingAsc\" ? \"ratingDesc\" : \"ratingAsc\")}\n        >\n          Sort by Rating\n        </Button>\n        <Button\n          leftIcon={<Icon as={sortType === \"stockAsc\" ? FaSortAmountUp : FaSortAmountDown} />}\n          onClick={() => handleSort(sortType === \"stockAsc\" ? \"stockDesc\" : \"stockAsc\")}\n        >\n          Sort by Stock\n        </Button>\n       \n      </ButtonGroup>\n    </>\n  );\n};","import { Input,Box,Text } from \"@chakra-ui/react\"\nimport { useDispatch } from \"react-redux\";\nimport { filter } from \"redux/filter/filter-slice\";\nimport { ButtonsSort } from \"components/ButtonsSort/ButtonsSort\";\n\nexport const InputFilter = () => {\n    const dispatch = useDispatch();\n\n    const filterProducts = evt => {\n    const evtTarget = evt.currentTarget.value.toLowerCase();\n    dispatch(filter(evtTarget)) \n  }\n    return (<Box p={4}>\n        <Text fontSize=\"xl\" mt={2}>Enter the name or category of the product you are looking for:</Text>\n      <Input\n                onChange={filterProducts}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Search products\"\n        mb={4}\n      />     <ButtonsSort/>\n          </Box>\n        )\n}","export const getFilter = state => state.filter;","export const getProducts = state => state.products.items;\nexport const getIsLoading = state => state.products.isLoading;","export const getIsOpen = state => state.modal","import {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    FormControl,\n    FormLabel,\n    Input,\n\n} from \"@chakra-ui/react\";\n import { Notify } from \"notiflix\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { editProduct } from \"redux/products/products-thunk\";\nimport { getIsOpen } from \"redux/modal/modal-select\";\nimport { isOpen } from \"redux/modal/modal-slice\";\n\nexport function ModalWindow({id,values}) {\n    const open = useSelector(getIsOpen)\n  const dispatch = useDispatch();\n  const { title } = values;\n\n\n  \n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n         const form = evt.currentTarget\n    const title = form.elements.title.value;\n   if (!title) {\n     Notify.failure('Sorry, but you didn&#180;t enter a value in the field')\n     return\n      }\n\n  \n    dispatch(editProduct({ title:title, id }))\n      dispatch(isOpen())\n      \n    }\n  return (\n      <Modal isOpen={open} onClose={()=>dispatch(isOpen())}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Please make changes</ModalHeader>\n              <ModalBody>\n                  <form onSubmit={handleSubmit}>\n           <FormControl>\n            <FormLabel>Title</FormLabel>\n                      <Input\n                              placeholder=\"Title\"\n                              type=\"text\"\n                              name=\"title\"\n                              defaultValue={title}\n                      />\n          </FormControl>\n                      <div style={{ display: 'flex', justifyContent: 'end', gap: '10px', margin: '10px' }} >\n                          <Button type=\"submit\" colorScheme=\"blue\" >Save</Button>\n\n                      <Button variant=\"outline\" mr={3} onClick={()=>dispatch(isOpen())}>\n            Cancel\n          </Button></div>\n\n</form>\n        </ModalBody>\n        <ModalFooter>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { Box, Flex, Image, Spacer, Stack, Text, IconButton, Portal } from \"@chakra-ui/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/filter/filter-select\";\nimport { getProducts } from \"redux/products/products-selectors\";\nimport { CloseIcon,EditIcon } from \"@chakra-ui/icons\";\nimport { deleteProduct } from \"redux/products/products-thunk\";\nimport { getIsOpen } from \"redux/modal/modal-select\";\nimport { useState } from \"react\";\nimport { isOpen } from 'redux/modal/modal-slice';\nimport { ModalWindow } from \"components/ModalWindow/ModalWindow\";\nimport { getSort } from \"redux/sort/sort-selector\";\n\n\nexport const ProductsList = () => {\n   const [id, setId] = useState();\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts)\n  const filter = useSelector(getFilter);\n  const isOpenModal = useSelector(getIsOpen);\n  const sortType = useSelector(getSort);\n  \n\n\n  const sortProducts = (products, sortType) => {\n    switch (sortType) {\n      case 'priceAsc':\n        return [...products].sort((a, b) => a.price - b.price);\n      case 'priceDesc':\n        return [...products].sort((a, b) => b.price - a.price);\n      case 'ratingAsc':\n        return [...products].sort((a, b) => a.rating - b.rating);\n      case 'ratingDesc':\n        return [...products].sort((a, b) => b.rating - a.rating);\n      case 'stockAsc':\n        return [...products].sort((a, b) => a.stock - b.stock);\n      case 'stockDesc':\n        return [...products].sort((a, b) => b.stock - a.stock);\n      default:\n        return products;\n    }\n  };\n  const sortedProducts = sortProducts(products, sortType);\n\n    const filterProducts = () => {\n      return sortedProducts?.filter(product =>\n        product.title.toLowerCase().includes(filter) ||\n      product.category?.toLowerCase().includes(filter))\n  }\n    \n\n\n\n  \n const findProduct = id => {\n  return products?.find(item => item.id === id);\n};\n  \n\n    return ( <>\n    <Stack padding=\"10px\" spacing={4}>\n      {filterProducts().map(product => (\n        <Flex key={product.id} align=\"center\" position=\"relative\">\n          {product.images &&\n            <Image border=\"green 3px solid\" boxSize=\"100px\" objectFit=\"cover\" src={product.images[0]} alt={product.title} />}\n          <Box ml={4}>\n            <Text fontWeight=\"bold\">{product.title}</Text>\n            {product.description && <Text>{product.description}</Text>}\n            {product.price && <Text fontSize=\"xl\" fontWeight=\"bold\" mt={2}>${product.price}</Text>}\n            {product.rating && <Text>Rating: {product.rating}</Text>}\n            {product.stock && <Text>Stock: {product.stock}</Text>}\n            {product.category && <Text>Category: {product.category}</Text>}\n            {product.thumbnail.author && <Text height=\"55px\">Author: {product.thumbnail.author}</Text>}\n            {product.thumbnail.year && <Text height=\"55px\">Year: {product.thumbnail.year}</Text>}\n          </Box>\n          <Spacer />\n          <Box><IconButton\n            width=\"100px\"\n                      position='absolute'\n                      top=\"50%\"\n                      right=\"0\"\n              icon={<CloseIcon />}\n              aria-label=\"Delete Product\"\n              variant=\"ghost\"\n              onClick={() =>dispatch(deleteProduct(product.id))}\n          />\n          <IconButton\n          data-id={product.id}\n              width=\"100px\"\n            position='absolute'\n            bottom=\"0\"\n                      right=\"0\"\n              icon={<EditIcon/>}\n              aria-label=\"Edit Product\"\n              variant=\"ghost\"\n              onClick={() => {  dispatch(isOpen()); setId(product.id) }}\n          /></Box>\n           \n        </Flex>\n      ))}\n      </Stack>\n      <Portal>{isOpenModal && <ModalWindow id={id} values={findProduct(id)} />}</Portal>\n    </>\n  );\n}\n","import styled from '@emotion/styled'\nimport {Field} from 'formik';\n\nexport const InputField = styled(Field)`\n width: 100%;\n  height: 8;\n  font-size: 16px;\n  padding: 0;\n  background-color: #EDF2F7; \n  border: 1px solid #E2E8F0; \n  border-radius: 0;\n  outline: none;\n  box-sizing: border-box;\n   padding: 2 3;\n  border-color: #CBD5E0;\n  color:black;\n  border-radius:4px;\n`;\n\nexport const ErrorText = styled.p`\ncolor:red;`;","import { Formik,Form,ErrorMessage } from 'formik';\nimport {\n  FormControl,\n  FormLabel,\n  Button,\n  Stack,\n  Flex,\n  Heading,\n} from '@chakra-ui/react';\nimport { InputField,ErrorText  } from './AddNewProduct.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { addProduct } from 'redux/products/products-thunk';\n\nconst schema = yup.object().shape({\n    title: yup.string().required(),\n    author: yup.string().required(),\n    year: yup.number().required(),\n    rating:yup.number().required(),\n}) \n\nconst initialValues = {\n    title: '',\n    author: '',\n    year: 1995,\n    rating:1,\n}\n\nconst FormError = ({ name }) => {\n    return(\n      <ErrorMessage\n      name={ name }\n      render={ message => <ErrorText>{ message}</ErrorText>}/>\n  )\n}\n\nexport const AddNewProduct = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { title, author, year, rating } = values;\n    dispatch(addProduct({title, author, year, rating}))    \nresetForm()\n    }\n    \n    return(\n      <>\n        <Heading fontSize=\"30px\">Please, enter values in the fields to add a new product:</Heading>\n            <Formik initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={schema}>\n    <Form>\n  <Stack padding=\"15px\" spacing=\"4\">\n    <Flex justifyContent=\"space-between\">\n      <FormControl flex=\"1\">\n        <FormLabel>Title\n                            <InputField name=\"title\" type=\"text\" />\n        <FormError name=\"title\" />\n        </FormLabel>\n\n      </FormControl>\n      <FormControl flex=\"1\" marginLeft=\"10px\">\n          <FormLabel>Author\n          <InputField name=\"author\" type=\"text\" />\n        <FormError name=\"author\" /></FormLabel>\n        \n      </FormControl>\n    </Flex>\n    <Flex justifyContent=\"space-between\">\n      <FormControl flex=\"1\">\n        <FormLabel>Year\n        <InputField name=\"year\" type=\"number\" />\n        <FormError name=\"year\" />\n        </FormLabel>\n        \n      </FormControl>\n      <FormControl flex=\"1\" marginLeft=\"10px\">\n        <FormLabel>Rating\n          <InputField name=\"rating\" />\n        <FormError name=\"rating\" />\n        </FormLabel>\n        \n      </FormControl>\n    </Flex>\n    <Button type=\"submit\">Add Product</Button>\n  </Stack>\n</Form>\n                </Formik>\n        </>\n    )\n}\n","import { InputFilter } from \"components/InputFilter/InputFilter\";\nimport { useSelector } from \"react-redux\";\nimport { Spinner,Box, Heading } from \"@chakra-ui/react\";\nimport { ProductsList } from \"components/ProductsList/ProductsList\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getIsLoading, getProducts } from \"redux/products/products-selectors\";\nimport { fetchAllProducts } from \"redux/products/products-thunk\";\nimport { AddNewProduct } from \"components/AddNewProduct/AddNewProduct\";\n\nconst Products = () => {\n    const dispatch = useDispatch();\n    const products = useSelector(getProducts)\n      const loading = useSelector(getIsLoading);\n\n     useEffect(() => {\n        dispatch(fetchAllProducts());\n    }, [dispatch]);\n    \n    return(\n        <>\n            \n            {loading ?\n                <Box position=\"fixed\"\n                    left=\"50%\"\n                    top=\"50%\"\n                    transform=\"translate(-50%,-50%)\">\n                    <Spinner thickness='4px'\n                        speed='0.65s'\n                        emptyColor='gray.200'\n                        color='blue.500'\n                        size='xl'\n                    />\n                </Box>\n                : <><AddNewProduct />\n                    <Heading textAlign=\"center\">Products list:</Heading>\n                    <InputFilter />\n                    {products?.length ? <ProductsList /> : <Heading margin=\"20px\">Sorry, but we have sold all the products</Heading>}\n                    </>}\n            \n        </>\n    )\n}\nexport default Products"],"names":["getSort","state","sort","ButtonsSort","dispatch","useDispatch","sortType","useSelector","handleSort","type","margin","display","flexWrap","variant","rowGap","leftIcon","as","FaSortAmountUp","FaSortAmountDown","onClick","InputFilter","p","fontSize","mt","I","onChange","evt","evtTarget","currentTarget","value","toLowerCase","filter","name","placeholder","mb","getFilter","getProducts","products","items","getIsLoading","isLoading","getIsOpen","modal","ModalWindow","id","values","open","title","isOpen","onClose","onSubmit","preventDefault","elements","editProduct","Notify","defaultValue","style","justifyContent","gap","colorScheme","mr","ProductsList","useState","setId","isOpenModal","sortedProducts","a","b","price","rating","stock","sortProducts","padding","spacing","product","includes","category","map","align","position","images","border","boxSize","objectFit","src","alt","ml","fontWeight","description","thumbnail","author","height","year","width","top","right","icon","deleteProduct","bottom","find","item","findProduct","InputField","styled","Field","ErrorText","schema","yup","shape","required","initialValues","FormError","render","message","AddNewProduct","resetForm","addProduct","validationSchema","flex","marginLeft","loading","useEffect","fetchAllProducts","left","transform","thickness","speed","emptyColor","color","size","textAlign","length"],"sourceRoot":""}